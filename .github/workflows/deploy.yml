name: Deploy to VPS

on:
  push:
    branches: [ main ]
  pull_request:
    types: [ closed ]
    branches: [ main ]

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    # Only run on merged PRs or direct pushes to main
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    
    steps:
      - name: SSH and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: ${{ secrets.VPS_SSH_PORT }}
          script: |
            echo "===== Starting deployment ====="
            
            # Check Node.js version
            echo "Current Node.js version: $(node -v)"
            
            # Update Node.js if needed
            if [[ $(node -v | cut -d. -f1 | tr -d 'v') -lt 14 ]]; then
              echo "Updating Node.js..."
              curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
              sudo apt-get install -y nodejs
              echo "New Node.js version: $(node -v)"
            fi
            
            # Check if the directory exists
            if [ -d "/home/e-do.studio-2.0" ]; then
              echo "Directory exists, navigating to /home/e-do.studio-2.0"
              cd /home/e-do.studio-2.0
            else
              echo "Directory does not exist, navigating to the correct location"
              cd /home/studio
            fi
            
            echo "Current directory: $(pwd)"
            
            # Fix Git repository issues
            echo "Fixing Git repository"
            if [ -d ".git" ]; then
              # Fix locked refs by removing them
              rm -rf .git/refs/remotes/origin
              rm -f .git/index.lock
              
              # Re-initialize Git configuration
              git config --global user.email "deploy@example.com"
              git config --global user.name "Deployment Bot"
              
              # Re-add origin if needed
              if ! git remote | grep -q origin; then
                git remote add origin https://github.com/E-Do-Studio/e-do.studio-2.0.git
              fi
              
              # Clean and hard reset
              git fetch origin
              git reset --hard origin/main
            else
              # Initialize new repository
              git init
              git remote add origin https://github.com/E-Do-Studio/e-do.studio-2.0.git
              git fetch
              git checkout main || git checkout -b main origin/main
            fi
            
            # Use npm instead of pnpm to avoid compatibility issues
            echo "Installing dependencies with npm"
            npm install
            
            echo "Building application with npm"
            npm run build
            
            # Restart PM2 process
            echo "Checking PM2 processes"
            pm2 list
            
            echo "Updating PM2 if needed"
            pm2 update || true
            
            echo "Restarting e-do-studio process"
            pm2 restart e-do-studio
            
            echo "===== Deployment complete ====="
